{
  "openapi": "3.0.3",
  "info": {
    "title": "Oxide Propolis Server API",
    "description": "API for interacting with the Propolis hypervisor frontend.",
    "contact": {
      "url": "https://oxide.computer",
      "email": "api@oxide.computer"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/instance": {
      "get": {
        "operationId": "instance_get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceGetResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "operationId": "instance_ensure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceEnsureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceEnsureResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/instance/disk/{id}/snapshot/{snapshot_id}": {
      "post": {
        "summary": "Issues a snapshot request to a crucible backend.",
        "operationId": "instance_issue_crucible_snapshot_request",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "snapshot_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Null",
                  "type": "string",
                  "enum": [
                    null
                  ]
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/instance/migrate/{migration_id}/status": {
      "get": {
        "operationId": "instance_migrate_status",
        "parameters": [
          {
            "in": "path",
            "name": "migration_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceMigrateStatusResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/instance/nmi": {
      "post": {
        "summary": "Issues an NMI to the instance.",
        "operationId": "instance_issue_nmi",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Null",
                  "type": "string",
                  "enum": [
                    null
                  ]
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/instance/serial": {
      "get": {
        "operationId": "instance_serial",
        "parameters": [
          {
            "in": "query",
            "name": "from_start",
            "description": "Character index in the serial buffer from which to read, counting the bytes output since instance start. If this is provided, `most_recent` must *not* be provided.",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "most_recent",
            "description": "Character index in the serial buffer from which to read, counting *backward* from the most recently buffered data retrieved from the instance. (See note on `from_start` about mutual exclusivity)",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {}
              }
            }
          }
        },
        "x-dropshot-websocket": {}
      }
    },
    "/instance/serial/history": {
      "get": {
        "operationId": "instance_serial_history_get",
        "parameters": [
          {
            "in": "query",
            "name": "from_start",
            "description": "Character index in the serial buffer from which to read, counting the bytes output since instance start. If this is not provided, `most_recent` must be provided, and if this *is* provided, `most_recent` must *not* be provided.",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "max_bytes",
            "description": "Maximum number of bytes of buffered serial console contents to return. If the requested range runs to the end of the available buffer, the data returned will be shorter than `max_bytes`.",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "most_recent",
            "description": "Character index in the serial buffer from which to read, counting *backward* from the most recently buffered data retrieved from the instance. (See note on `from_start` about mutual exclusivity)",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceSerialConsoleHistoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/instance/spec": {
      "get": {
        "operationId": "instance_spec_get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceSpecGetResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "operationId": "instance_spec_ensure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceSpecEnsureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceEnsureResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/instance/state": {
      "put": {
        "operationId": "instance_state_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceStateRequested"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "resource updated"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/instance/state-monitor": {
      "get": {
        "operationId": "instance_state_monitor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceStateMonitorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceStateMonitorResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "Error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "BackendSpec": {
        "description": "A wrapper type for all the backends in an instance spec.",
        "type": "object",
        "properties": {
          "network_backends": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NetworkBackend"
            }
          },
          "storage_backends": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/StorageBackend"
            }
          }
        },
        "required": [
          "network_backends",
          "storage_backends"
        ]
      },
      "Board": {
        "description": "A VM's mainboard.",
        "type": "object",
        "properties": {
          "chipset": {
            "description": "The chipset to expose to guest software.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Chipset"
              }
            ]
          },
          "cpus": {
            "description": "The number of virtual logical processors attached to this VM.",
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "memory_mb": {
            "description": "The amount of guest RAM attached to this VM.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "required": [
          "chipset",
          "cpus",
          "memory_mb"
        ],
        "additionalProperties": false
      },
      "Chipset": {
        "description": "A kind of virtual chipset.",
        "oneOf": [
          {
            "description": "An Intel 440FX-compatible chipset.",
            "type": "object",
            "properties": {
              "i440_fx": {
                "type": "object",
                "properties": {
                  "enable_pcie": {
                    "description": "Specifies whether the chipset should allow PCI configuration space to be accessed through the PCIe extended configuration mechanism.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "enable_pcie"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "i440_fx"
            ],
            "additionalProperties": false
          }
        ]
      },
      "CrucibleOpts": {
        "type": "object",
        "properties": {
          "cert_pem": {
            "nullable": true,
            "type": "string"
          },
          "control": {
            "nullable": true,
            "type": "string"
          },
          "flush_timeout": {
            "nullable": true,
            "type": "number",
            "format": "float"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "nullable": true,
            "type": "string"
          },
          "key_pem": {
            "nullable": true,
            "type": "string"
          },
          "lossy": {
            "type": "boolean"
          },
          "read_only": {
            "type": "boolean"
          },
          "root_cert_pem": {
            "nullable": true,
            "type": "string"
          },
          "target": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "lossy",
          "read_only",
          "target"
        ]
      },
      "DeviceSpec": {
        "type": "object",
        "properties": {
          "board": {
            "$ref": "#/components/schemas/Board"
          },
          "network_devices": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NetworkDevice"
            }
          },
          "pci_pci_bridges": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PciPciBridge"
            }
          },
          "serial_ports": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SerialPort"
            }
          },
          "storage_devices": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/StorageDevice"
            }
          }
        },
        "required": [
          "board",
          "network_devices",
          "pci_pci_bridges",
          "serial_ports",
          "storage_devices"
        ],
        "additionalProperties": false
      },
      "DiskAttachment": {
        "type": "object",
        "properties": {
          "disk_id": {
            "type": "string",
            "format": "uuid"
          },
          "generation_id": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "state": {
            "$ref": "#/components/schemas/DiskAttachmentState"
          }
        },
        "required": [
          "disk_id",
          "generation_id",
          "state"
        ]
      },
      "DiskAttachmentState": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "Detached",
              "Destroyed",
              "Faulted"
            ]
          },
          {
            "type": "object",
            "properties": {
              "Attached": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "Attached"
            ],
            "additionalProperties": false
          }
        ]
      },
      "DiskRequest": {
        "type": "object",
        "properties": {
          "device": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read_only": {
            "type": "boolean"
          },
          "slot": {
            "$ref": "#/components/schemas/Slot"
          },
          "volume_construction_request": {
            "$ref": "#/components/schemas/VolumeConstructionRequest"
          }
        },
        "required": [
          "device",
          "name",
          "read_only",
          "slot",
          "volume_construction_request"
        ]
      },
      "Error": {
        "description": "Error information from a response.",
        "type": "object",
        "properties": {
          "error_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "request_id"
        ]
      },
      "Instance": {
        "type": "object",
        "properties": {
          "disks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiskAttachment"
            }
          },
          "nics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetworkInterface"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/InstanceProperties"
          },
          "state": {
            "$ref": "#/components/schemas/InstanceState"
          }
        },
        "required": [
          "disks",
          "nics",
          "properties",
          "state"
        ]
      },
      "InstanceEnsureRequest": {
        "type": "object",
        "properties": {
          "cloud_init_bytes": {
            "nullable": true,
            "type": "string"
          },
          "disks": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiskRequest"
            }
          },
          "migrate": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMigrateInitiateRequest"
              }
            ]
          },
          "nics": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetworkInterfaceRequest"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/InstanceProperties"
          }
        },
        "required": [
          "properties"
        ]
      },
      "InstanceEnsureResponse": {
        "type": "object",
        "properties": {
          "migrate": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMigrateInitiateResponse"
              }
            ]
          }
        }
      },
      "InstanceGetResponse": {
        "type": "object",
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "required": [
          "instance"
        ]
      },
      "InstanceMigrateInitiateRequest": {
        "type": "object",
        "properties": {
          "migration_id": {
            "type": "string",
            "format": "uuid"
          },
          "src_addr": {
            "type": "string"
          },
          "src_uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "migration_id",
          "src_addr",
          "src_uuid"
        ]
      },
      "InstanceMigrateInitiateResponse": {
        "type": "object",
        "properties": {
          "migration_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "migration_id"
        ]
      },
      "InstanceMigrateStatusResponse": {
        "type": "object",
        "properties": {
          "migration_id": {
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "$ref": "#/components/schemas/MigrationState"
          }
        },
        "required": [
          "migration_id",
          "state"
        ]
      },
      "InstanceProperties": {
        "type": "object",
        "properties": {
          "bootrom_id": {
            "description": "ID of the bootrom used to initialize this Instance.",
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "description": "Free-form text description of an Instance.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for this Instance.",
            "type": "string",
            "format": "uuid"
          },
          "image_id": {
            "description": "ID of the image used to initialize this Instance.",
            "type": "string",
            "format": "uuid"
          },
          "memory": {
            "description": "Size of memory allocated to the Instance, in MiB.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "name": {
            "description": "Human-readable name of the Instance.",
            "type": "string"
          },
          "vcpus": {
            "description": "Number of vCPUs to be allocated to the Instance.",
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "required": [
          "bootrom_id",
          "description",
          "id",
          "image_id",
          "memory",
          "name",
          "vcpus"
        ]
      },
      "InstanceSerialConsoleHistoryResponse": {
        "description": "Contents of an Instance's serial console buffer.",
        "type": "object",
        "properties": {
          "data": {
            "description": "The bytes starting from the requested offset up to either the end of the buffer or the request's `max_bytes`. Provided as a u8 array rather than a string, as it may not be UTF-8.",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0
            }
          },
          "last_byte_offset": {
            "description": "The absolute offset since boot (suitable for use as `byte_offset` in a subsequent request) of the last byte returned in `data`.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "required": [
          "data",
          "last_byte_offset"
        ]
      },
      "InstanceSpec": {
        "description": "A full instance specification. See the documentation for individual elements for more information about the fields in this structure.",
        "type": "object",
        "properties": {
          "backends": {
            "$ref": "#/components/schemas/BackendSpec"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceSpec"
          }
        },
        "required": [
          "backends",
          "devices"
        ],
        "additionalProperties": false
      },
      "InstanceSpecEnsureRequest": {
        "type": "object",
        "properties": {
          "instance_spec": {
            "$ref": "#/components/schemas/InstanceSpec"
          },
          "migrate": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMigrateInitiateRequest"
              }
            ]
          },
          "properties": {
            "$ref": "#/components/schemas/InstanceProperties"
          }
        },
        "required": [
          "instance_spec",
          "properties"
        ]
      },
      "InstanceSpecGetResponse": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/InstanceProperties"
          },
          "spec": {
            "$ref": "#/components/schemas/InstanceSpec"
          },
          "state": {
            "$ref": "#/components/schemas/InstanceState"
          }
        },
        "required": [
          "properties",
          "spec",
          "state"
        ]
      },
      "InstanceState": {
        "description": "Current state of an Instance.",
        "type": "string",
        "enum": [
          "Creating",
          "Starting",
          "Running",
          "Stopping",
          "Stopped",
          "Rebooting",
          "Migrating",
          "Repairing",
          "Failed",
          "Destroyed"
        ]
      },
      "InstanceStateMonitorRequest": {
        "type": "object",
        "properties": {
          "gen": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "required": [
          "gen"
        ]
      },
      "InstanceStateMonitorResponse": {
        "type": "object",
        "properties": {
          "gen": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "migration": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMigrateStatusResponse"
              }
            ]
          },
          "state": {
            "$ref": "#/components/schemas/InstanceState"
          }
        },
        "required": [
          "gen",
          "state"
        ]
      },
      "InstanceStateRequested": {
        "type": "string",
        "enum": [
          "Run",
          "Stop",
          "Reboot"
        ]
      },
      "MigrationState": {
        "type": "string",
        "enum": [
          "Sync",
          "RamPush",
          "Pause",
          "RamPushDirty",
          "Device",
          "Resume",
          "RamPull",
          "Server",
          "Finish",
          "Error"
        ]
      },
      "NetworkBackend": {
        "description": "A network backend.",
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/NetworkBackendKind"
          }
        },
        "required": [
          "kind"
        ],
        "additionalProperties": false
      },
      "NetworkBackendKind": {
        "description": "A kind of network backend: a connection to an on-sled networking resource that provides the functions needed for guest network adapters to implement their contracts.",
        "oneOf": [
          {
            "description": "A virtio-net (viona) backend associated with the supplied named vNIC on the host.",
            "type": "object",
            "properties": {
              "virtio": {
                "type": "object",
                "properties": {
                  "vnic_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "vnic_name"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "virtio"
            ],
            "additionalProperties": false
          },
          {
            "description": "A DLPI backend associated with the supplied named vNIC on the host.",
            "type": "object",
            "properties": {
              "dlpi": {
                "type": "object",
                "properties": {
                  "vnic_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "vnic_name"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "dlpi"
            ],
            "additionalProperties": false
          }
        ]
      },
      "NetworkDevice": {
        "description": "A virtual network adapter that presents a virtio network device interface.",
        "type": "object",
        "properties": {
          "backend_name": {
            "description": "The name of the device's backend.",
            "type": "string"
          },
          "pci_path": {
            "description": "The PCI path at which to attach this device.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PciPath"
              }
            ]
          }
        },
        "required": [
          "backend_name",
          "pci_path"
        ],
        "additionalProperties": false
      },
      "NetworkInterface": {
        "type": "object",
        "properties": {
          "attachment": {
            "$ref": "#/components/schemas/NetworkInterfaceAttachmentState"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "attachment",
          "name"
        ]
      },
      "NetworkInterfaceAttachmentState": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "Detached",
              "Faulted"
            ]
          },
          {
            "type": "object",
            "properties": {
              "Attached": {
                "$ref": "#/components/schemas/Slot"
              }
            },
            "required": [
              "Attached"
            ],
            "additionalProperties": false
          }
        ]
      },
      "NetworkInterfaceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "slot": {
            "$ref": "#/components/schemas/Slot"
          }
        },
        "required": [
          "name",
          "slot"
        ]
      },
      "PciPath": {
        "description": "A PCI bus/device/function tuple.",
        "type": "object",
        "properties": {
          "bus": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "device": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "function": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "required": [
          "bus",
          "device",
          "function"
        ]
      },
      "PciPciBridge": {
        "description": "A PCI-PCI bridge.",
        "type": "object",
        "properties": {
          "downstream_bus": {
            "description": "The logical bus number of this bridge's downstream bus. Other devices may use this bus number in their PCI paths to indicate they should be attached to this bridge's bus.",
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "pci_path": {
            "description": "The PCI path at which to attach this bridge.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PciPath"
              }
            ]
          }
        },
        "required": [
          "downstream_bus",
          "pci_path"
        ],
        "additionalProperties": false
      },
      "SerialPort": {
        "description": "A serial port device.",
        "type": "object",
        "properties": {
          "num": {
            "description": "The serial port number for this port.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SerialPortNumber"
              }
            ]
          }
        },
        "required": [
          "num"
        ],
        "additionalProperties": false
      },
      "SerialPortNumber": {
        "description": "A serial port identifier, which determines what I/O ports a guest can use to access a port.",
        "type": "string",
        "enum": [
          "com1",
          "com2",
          "com3",
          "com4"
        ]
      },
      "Slot": {
        "description": "A stable index which is translated by Propolis into a PCI BDF, visible to the guest.",
        "type": "integer",
        "format": "uint8",
        "minimum": 0
      },
      "StorageBackend": {
        "description": "A storage backend.",
        "type": "object",
        "properties": {
          "kind": {
            "description": "The kind of storage backend this is.",
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageBackendKind"
              }
            ]
          },
          "readonly": {
            "description": "Whether the storage is read-only.",
            "type": "boolean"
          }
        },
        "required": [
          "kind",
          "readonly"
        ],
        "additionalProperties": false
      },
      "StorageBackendKind": {
        "description": "A kind of storage backend: a connection to on-sled resources or other services that provide the functions storage devices need to implement their contracts.",
        "oneOf": [
          {
            "description": "A Crucible-backed device, containing a construction request.",
            "type": "object",
            "properties": {
              "crucible": {
                "type": "object",
                "properties": {
                  "req": {
                    "$ref": "#/components/schemas/VolumeConstructionRequest"
                  }
                },
                "required": [
                  "req"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "crucible"
            ],
            "additionalProperties": false
          },
          {
            "description": "A device backed by a file on the host machine. The payload is a path to this file.",
            "type": "object",
            "properties": {
              "file": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "file"
            ],
            "additionalProperties": false
          },
          {
            "description": "A device backed by an in-memory buffer in the VMM process. The initial contents of the disk are a base64-encoded string.",
            "type": "object",
            "properties": {
              "in_memory": {
                "type": "object",
                "properties": {
                  "base64": {
                    "type": "string"
                  }
                },
                "required": [
                  "base64"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "in_memory"
            ],
            "additionalProperties": false
          }
        ]
      },
      "StorageDevice": {
        "description": "A storage device.",
        "type": "object",
        "properties": {
          "backend_name": {
            "description": "The name of the device's backend.",
            "type": "string"
          },
          "kind": {
            "description": "The device interface to present to the guest.",
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageDeviceKind"
              }
            ]
          },
          "pci_path": {
            "description": "The PCI path at which to attach this device.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PciPath"
              }
            ]
          }
        },
        "required": [
          "backend_name",
          "kind",
          "pci_path"
        ],
        "additionalProperties": false
      },
      "StorageDeviceKind": {
        "description": "A kind of storage device: the sort of virtual device interface the VMM exposes to guest software.",
        "type": "string",
        "enum": [
          "virtio",
          "nvme"
        ]
      },
      "VolumeConstructionRequest": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "block_size": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "read_only_parent": {
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VolumeConstructionRequest"
                  }
                ]
              },
              "sub_volumes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VolumeConstructionRequest"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "volume"
                ]
              }
            },
            "required": [
              "block_size",
              "id",
              "sub_volumes",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "block_size": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "url"
                ]
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "block_size",
              "id",
              "type",
              "url"
            ]
          },
          {
            "type": "object",
            "properties": {
              "block_size": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0
              },
              "blocks_per_extent": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0
              },
              "extent_count": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "gen": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0
              },
              "opts": {
                "$ref": "#/components/schemas/CrucibleOpts"
              },
              "type": {
                "type": "string",
                "enum": [
                  "region"
                ]
              }
            },
            "required": [
              "block_size",
              "blocks_per_extent",
              "extent_count",
              "gen",
              "opts",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "block_size": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "path": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "file"
                ]
              }
            },
            "required": [
              "block_size",
              "id",
              "path",
              "type"
            ]
          }
        ]
      }
    }
  }
}