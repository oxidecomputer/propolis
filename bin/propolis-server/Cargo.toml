[package]
name = "propolis-server"
version = "0.1.0"
license = "MPL-2.0"
edition = "2021"

[lib]
name = "propolis_server"
path = "src/lib/lib.rs"
doctest = false

[[bin]]
name = "propolis-server"
path = "src/main.rs"
doc = false
doctest = false
test = false

[dependencies]
atty.workspace = true
anyhow.workspace = true
async-trait.workspace = true
bit_field.workspace = true
bitvec.workspace = true
bytes.workspace = true
cfg-if.workspace = true
chrono = { workspace = true, features = [ "serde" ] }
clap = { workspace = true, features = ["derive"] }
const_format.workspace = true
crucible-client-types.workspace = true
dropshot = { workspace = true, features = ["usdt-probes"] }
enum-iterator.workspace = true
erased-serde.workspace = true
futures.workspace = true
http.workspace = true
hyper.workspace = true
internal-dns.workspace = true
lazy_static.workspace = true
nexus-client.workspace = true
num_enum.workspace = true
omicron-common.workspace = true
oximeter-producer.workspace = true
oximeter.workspace = true
ron.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full"] }
tokio-tungstenite.workspace = true
tokio-util = { workspace = true, features = ["codec"] }
toml.workspace = true
serde.workspace = true
serde_derive.workspace = true
serde_json.workspace = true
slog.workspace = true
slog-async.workspace = true
slog-bunyan.workspace = true
slog-dtrace.workspace = true
slog-term.workspace = true
propolis = { workspace = true, features = ["crucible-full", "oximeter"] }
propolis-client = { workspace = true, features = ["generated"] }
propolis-server-config.workspace = true
rfb.workspace = true
uuid.workspace = true
usdt.workspace = true
base64.workspace = true
schemars = { workspace = true, features = ["chrono", "uuid1"] }

[dev-dependencies]
hex.workspace = true
reqwest = { workspace = true, features = ["rustls-tls"] }
ring.workspace = true
slog = { workspace = true, features = [ "max_level_trace", "release_max_level_debug" ] }
expectorate.workspace = true
mockall.workspace = true

[features]
default = []

# When building to be packaged for inclusion in the production ramdisk
# (nominally an Omicron package), certain code is compiled in or out.
omicron-build = ["propolis/omicron-build"]

# If selected, only build a mock server which does not actually spawn instances
# (i.e. to test with a facsimile of the API on unsupported platforms)
mock-only = []

# Falcon builds require corresponding bits turned on in the dependency libs
falcon = ["propolis/falcon", "propolis-client/falcon"]
